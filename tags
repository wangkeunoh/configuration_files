!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
#md-notification .btn	github.css	/^#md-notification .btn {$/;"	c
#megamenu-back-btn	newsprint.css	/^#megamenu-back-btn {$/;"	i
#recent-file-panel tbody tr:nth-child(2n-1)	newsprint.css	/^#recent-file-panel tbody tr:nth-child(2n-1) {$/;"	s
#sidebar-loading-template	newsprint.css	/^#sidebar-loading-template, #sidebar-loading-template.file-list-item {$/;"	i
#sidebar-loading-template.file-list-item	newsprint.css	/^#sidebar-loading-template, #sidebar-loading-template.file-list-item {$/;"	c
#top-titlebar	newsprint.css	/^#top-titlebar, #top-titlebar *,$/;"	i
#top-titlebar *	newsprint.css	/^#top-titlebar, #top-titlebar *,$/;"	s
#typora-quick-open	github.css	/^#typora-quick-open {$/;"	i
#typora-quick-open	newsprint.css	/^#typora-quick-open {$/;"	i
#typora-quick-open-item	github.css	/^#typora-quick-open-item {$/;"	i
#typora-sidebar	newsprint.css	/^#typora-sidebar {$/;"	i
#write	github.css	/^#write {$/;"	i
#write > ol:first-child	github.css	/^#write > ol:first-child{$/;"	s
#write > ul:first-child	github.css	/^#write > ul:first-child,$/;"	s
#write div.md-toc-tooltip	newsprint.css	/^#write div.md-toc-tooltip {$/;"	c
#write pre.md-meta-block	newsprint.css	/^#write pre.md-meta-block {$/;"	c
#write>h3.md-focus:before	github.css	/^#write>h3.md-focus:before{$/;"	c
#write>h3.md-focus:before	newsprint.css	/^#write>h3.md-focus:before{$/;"	c
#write>h4.md-focus:before	github.css	/^#write>h4.md-focus:before{$/;"	c
#write>h4.md-focus:before	newsprint.css	/^#write>h4.md-focus:before{$/;"	c
#write>h5.md-focus:before	github.css	/^#write>h5.md-focus:before{$/;"	c
#write>h5.md-focus:before	newsprint.css	/^#write>h5.md-focus:before{$/;"	c
#write>h6.md-focus:before	github.css	/^#write>h6.md-focus:before{$/;"	c
#write>h6.md-focus:before	newsprint.css	/^#write>h6.md-focus:before{$/;"	c
$FZF_DEFAULT_COMMAND	plugin/fzf.vim	/^let $FZF_DEFAULT_COMMAND="find -L * -path '*\/\\.*' -prune -o -type f -print -o -type l -print 2/;"	v
$FZF_DEFAULT_OPTS	plugin/fzf.vim	/^let $FZF_DEFAULT_OPTS = '--layout=reverse --info=inline'$/;"	v
$FZF_DEFAULT_OPTS	plugin/fzf.vim	/^let $FZF_DEFAULT_OPTS='--bind=alt-a:select-all,alt-d:deselect-all'$/;"	v
.CodeMirror-lines	github.css	/^.CodeMirror-lines {$/;"	c
.auto-suggest-container ul li	newsprint.css	/^.auto-suggest-container ul li {$/;"	s
.btn-default	newsprint.css	/^.btn-default {$/;"	c
.code-tooltip	github.css	/^.code-tooltip {$/;"	c
.context-menu	github.css	/^header, .context-menu, .megamenu-content, footer{$/;"	c
.context-menu	newsprint.css	/^header, .context-menu, .megamenu-content, footer {$/;"	c
.dropdown-menu .divider	github.css	/^.dropdown-menu .divider {$/;"	c
.dropdown-menu .divider	newsprint.css	/^.dropdown-menu .divider {$/;"	c
.file-library-node.active>.file-node-background	newsprint.css	/^.file-library-node.active>.file-node-background{$/;"	c
.file-list-item	newsprint.css	/^.file-list-item {$/;"	c
.file-list-item	newsprint.css	/^.file-list-item{$/;"	c
.file-list-item-file-name	newsprint.css	/^.file-list-item-file-name {$/;"	c
.file-list-item-summary	newsprint.css	/^.file-list-item-summary {$/;"	c
.file-list-item.active	newsprint.css	/^.file-list-item.active {$/;"	c
.file-list-item.active .file-list-item-file-name	newsprint.css	/^.file-list-item.active .file-list-item-file-name  {$/;"	c
.file-node-content:hover .file-node-icon	github.css	/^.file-node-content:hover .file-node-icon,$/;"	c
.file-node-content:hover .file-node-open-state	github.css	/^.file-node-content:hover .file-node-open-state{$/;"	c
.file-tree-node.active>.file-node-content	newsprint.css	/^.file-tree-node.active>.file-node-content{$/;"	c
.long-btn:hover	newsprint.css	/^.long-btn:hover {$/;"	c
.mac-seamless-mode #typora-sidebar	github.css	/^.mac-seamless-mode #typora-sidebar {$/;"	i
.mathjax-block>.code-tooltip	github.css	/^.mathjax-block>.code-tooltip {$/;"	c
.md-after	newsprint.css	/^.md-meta,.md-before, .md-after {$/;"	c
.md-before	newsprint.css	/^.md-meta,.md-before, .md-after {$/;"	c
.md-diagram-panel	newsprint.css	/^.md-diagram-panel {$/;"	c
.md-fences	github.css	/^.md-fences {$/;"	c
.md-fences	github.css	/^.md-fences,$/;"	c
.md-fences	newsprint.css	/^.md-fences {$/;"	c
.md-image>.md-meta	github.css	/^.md-image>.md-meta {$/;"	c
.md-image>.md-meta	newsprint.css	/^.md-image>.md-meta {$/;"	c
.md-image>.md-meta	newsprint.css	/^.md-image>.md-meta{$/;"	c
.md-lang	github.css	/^.md-lang {$/;"	c
.md-mathjax-midline	github.css	/^.md-mathjax-midline {$/;"	c
.md-meta	newsprint.css	/^.md-meta,.md-before, .md-after {$/;"	c
.md-tag	github.css	/^.md-tag {$/;"	c
.md-task-list-item	newsprint.css	/^.md-task-list-item {$/;"	c
.md-task-list-item > input	github.css	/^.md-task-list-item > input {$/;"	s
.md-task-list-item > input:before	newsprint.css	/^.md-task-list-item > input:before {$/;"	s
.md-task-list-item > input:checked:before	newsprint.css	/^.md-task-list-item > input:checked:before,$/;"	s
.md-task-list-item > input[checked] :before	newsprint.css	/^.md-task-list-item > input[checked]:before{$/;"	s
.md-task-list-item>input	newsprint.css	/^.md-task-list-item>input {$/;"	c
.md-toc	github.css	/^.md-toc { $/;"	c
.md-toc-content:empty:before	newsprint.css	/^.md-toc-content:empty:before{$/;"	c
.md-toc-item	newsprint.css	/^.md-toc-item {$/;"	c
.md-toc:focus .md-toc-content	newsprint.css	/^.md-toc:focus .md-toc-content{$/;"	c
.megamenu-content	github.css	/^header, .context-menu, .megamenu-content, footer{$/;"	c
.megamenu-content	newsprint.css	/^.megamenu-content {$/;"	c
.megamenu-content	newsprint.css	/^header, .context-menu, .megamenu-content, footer {$/;"	c
.megamenu-menu	newsprint.css	/^.megamenu-menu {$/;"	c
.megamenu-menu	newsprint.css	/^.megamenu-menu,$/;"	c
.megamenu-menu-header	newsprint.css	/^.megamenu-menu-header {$/;"	c
.megamenu-menu-header #megamenu-menu-header-title	newsprint.css	/^.megamenu-menu-header #megamenu-menu-header-title,$/;"	i
.megamenu-menu-header #megamenu-menu-header-title:before	newsprint.css	/^.megamenu-menu-header #megamenu-menu-header-title:before {$/;"	i
.megamenu-menu-header:focus	newsprint.css	/^.megamenu-menu-header:focus {$/;"	c
.megamenu-menu-header:hover	newsprint.css	/^.megamenu-menu-header:hover, $/;"	c
.megamenu-menu-list li a.active	newsprint.css	/^.megamenu-menu-list li a:hover, .megamenu-menu-list li a.active {$/;"	c
.megamenu-menu-list li a:hover	newsprint.css	/^.megamenu-menu-list li a:hover, .megamenu-menu-list li a.active {$/;"	s
.megamenu-menu-panel .btn	newsprint.css	/^.megamenu-menu-panel .btn {$/;"	c
.megamenu-menu-panel tbody tr:hover td:nth-child(2)	newsprint.css	/^.megamenu-menu-panel tbody tr:hover td:nth-child(2) {$/;"	s
.menu-item-container a.menu-style-btn	github.css	/^.menu-item-container a.menu-style-btn {$/;"	c
.modal-content	newsprint.css	/^.modal-content {$/;"	c
.on-focus-mode blockquote	github.css	/^.on-focus-mode blockquote {$/;"	s
.os-windows-7 strong	newsprint.css	/^.os-windows-7 strong  {$/;"	s
.os-windows-7 strong	newsprint.css	/^.os-windows-7 strong,$/;"	s
.outline-expander:before	newsprint.css	/^.outline-expander:before {$/;"	c
.outline-expander:hover:before	newsprint.css	/^.outline-expander:hover:before,$/;"	c
.outline-item-open>.outline-item>.outline-expander:before	newsprint.css	/^.outline-item-open>.outline-item>.outline-expander:before {$/;"	c
.outline-item:hover	newsprint.css	/^.outline-item:hover {$/;"	c
.pin-outline #typora-sidebar	newsprint.css	/^.pin-outline #typora-sidebar {$/;"	i
.pin-outline #typora-sidebar:hover .outline-title-wrapper	newsprint.css	/^.pin-outline #typora-sidebar:hover .outline-title-wrapper {$/;"	c
.searchpanel-search-option-btn.active	newsprint.css	/^.searchpanel-search-option-btn.active {$/;"	c
.sidebar-tabs	github.css	/^.sidebar-tabs {$/;"	c
.task-list	newsprint.css	/^.task-list{$/;"	c
.ty-preferences .btn-default	newsprint.css	/^.ty-preferences .btn-default {$/;"	c
.ty-preferences .nav-group-item.active	github.css	/^.ty-preferences .nav-group-item.active {$/;"	c
.ty-preferences .window-content	github.css	/^.ty-preferences .window-content {$/;"	c
.ty-preferences .window-header	newsprint.css	/^.ty-preferences .window-header {$/;"	c
.ty-show-word-count #footer-word-count	newsprint.css	/^.ty-show-word-count #footer-word-count {$/;"	i
.ty-side-sort-btn.active	newsprint.css	/^.ty-side-sort-btn.active {$/;"	c
.ty-table-edit	newsprint.css	/^.ty-table-edit {$/;"	c
.typora-node .outline-item:hover	newsprint.css	/^.typora-node .outline-item:hover {$/;"	c
.typora-sourceview-on #toggle-sourceview-btn	newsprint.css	/^.typora-sourceview-on #toggle-sourceview-btn,$/;"	i
:root	github.css	/^:root {$/;"	s
:root	newsprint.css	/^:root {$/;"	s
<A-f>	plugin/rg.vim	/^nnoremap <A-f> :Rg<CR>$/;"	m
<C-A>	plugin/keybindings.vim	/^nnoremap <C-A> ggVG$/;"	m
<C-f>	plugin/fzf.vim	/^map <C-f> :Files<CR>$/;"	m
<C-h>	init.vim	/^nnoremap<C-h> :bprevious<CR>$/;"	m
<C-j>	plugin/ale.vim	/^nmap <silent> <C-j> <Plug>(ale_next_wrap)$/;"	m
<C-k>	plugin/ale.vim	/^nmap <silent> <C-k> <Plug>(ale_previous_wrap)$/;"	m
<C-l>	init.vim	/^nnoremap<C-l> :bnext<CR>$/;"	m
<C-s>	plugin/coc.vim	/^nmap <silent> <C-s> <Plug>(coc-range-select)$/;"	m
<C-s>	plugin/coc.vim	/^xmap <silent> <C-s> <Plug>(coc-range-select)$/;"	m
<ESC>	plugin/keybindings.vim	/^nnoremap <ESC> :nohl<CR>$/;"	m
<F12>	plugin/keybindings.vim	/^map <F12> :%s\/^.*\\| \/\/g<CR>$/;"	m
<F1>	plugin/keybindings.vim	/^nnoremap <F1> :TagbarToggle<CR>$/;"	m
<F2>	plugin/fzf.vim	/^nmap <F2> :Files \/home-mc\/wangkeun.oh\/Perforce\/GA_RIL_WangkeunOh_VdiLinuxPc_Source\/RIO\/<CR/;"	m
<F3>	plugin/fzf.vim	/^nmap <F3> :Files \/home-mc\/wangkeun.oh\/Perforce\/GA_RIL_WangkeunOh_VdiLinuxPc_Source\/SOLO\/<C/;"	m
<F4>	plugin/fzf.vim	/^nmap <F4> :Files \/home-mc\/wangkeun.oh\/Perforce\/GA_RIL_WangkeunOh_VdiLinuxPc_Source\/VENDOR\//;"	m
<F5>	plugin/fzf.vim	/^nmap <F5> :Files \/home-mc\/wangkeun.oh\/Perforce\/GA_RIL_WangkeunOh_VdiLinuxPc_Source\/VENDOR_O/;"	m
<F6>	plugin/keybindings.vim	/^nnoremap <F6> :execute "VWS \/" . expand("<cword>") . "\/" <Bar> :lopen<CR>$/;"	m
<F7>	plugin/keybindings.vim	/^nnoremap <F7> :put =expand('%:p')<CR>$/;"	m
<F9>	plugin/keybindings.vim	/^nnoremap <F9> :%s\/zzzz\/　　\/g<CR>$/;"	m
<LocalLeader>a	plugin/wiki.vim	/^nmap <LocalLeader>a :execute "VWS \/" . expand("<cword>") . "\/" <Bar> :lopen<CR>$/;"	m
<LocalLeader>b	plugin/wiki.vim	/^nmap <LocalLeader>b :execute "VWB" <Bar> :lopen<CR>$/;"	m
<LocalLeader>i	plugin/todo.vim	/^map <LocalLeader>i <Plug>(simple-todo-new)$/;"	m
<LocalLeader>l	plugin/wiki.vim	/^nmap <LocalLeader>l :VimwikiToggleListItem<CR>$/;"	m
<LocalLeader>w<LocalLeader>w	plugin/wiki.vim	/^nmap <LocalLeader>w<LocalLeader>w <Plug>VimwikiMakeDiaryNote$/;"	m
<LocalLeader>wi	plugin/wiki.vim	/^nmap <LocalLeader>wi <Plug>VimwikiDiaryIndex$/;"	m
<LocalLeader>wt	plugin/wiki.vim	/^nmap <LocalLeader>wt :VimwikiTable<CR>$/;"	m
<LocalLeader>ww	plugin/wiki.vim	/^nmap <LocalLeader>ww <Plug>VimwikiIndex$/;"	m
<LocalLeader>y	plugin/todo.vim	/^map <LocalLeader>y <Plug>(simple-todo-mark-as-done)$/;"	m
<S-TAB>	plugin/coc.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<TAB>	plugin/coc.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<c-space>	plugin/coc.vim	/^inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<cr>	plugin/coc.vim	/^  inoremap <expr> <cr> complete_info()["selected"] != "-1" ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<cr>	plugin/coc.vim	/^  inoremap <expr> <cr> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<down>	init.vim	/^nnoremap <down> :resize resize -5<CR>$/;"	m
<leader>0	plugin/rg.vim	/^nnoremap <leader>0 :let @" = expand("%:p")<CR>$/;"	m
<leader>1	plugin/rg.vim	/^nnoremap <leader>1 :cd \/media\/wangkeun\/hardDisk\/perforce\/GA_RIL_WangkeunOh_LinuxPc2_Source\//;"	m
<leader>2	plugin/rg.vim	/^nnoremap <leader>2 :cd \/media\/wangkeun\/hardDisk\/perforce\/GA_RIL_WangkeunOh_LinuxPc2_Source\//;"	m
<leader>3	plugin/rg.vim	/^nnoremap <leader>3 :cd \/media\/wangkeun\/hardDisk\/perforce\/GA_RIL_WangkeunOh_LinuxPc2_Source\//;"	m
<leader><SPACE>	plugin/nerd.vim	/^nnoremap <leader><SPACE> :NERDTreeFind<CR>$/;"	m
<leader>a	plugin/coc.vim	/^nmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>a	plugin/coc.vim	/^xmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>ac	plugin/coc.vim	/^nmap <leader>ac  <Plug>(coc-codeaction)$/;"	m
<leader>bb	plugin/keybindings.vim	/^nnoremap <leader>bb :Buffers<CR>$/;"	m
<leader>f	plugin/coc.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	plugin/coc.vim	/^xmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	plugin/rg.vim	/^nnoremap <leader>f :BLines $/;"	m
<leader>ff	plugin/keybindings.vim	/^nnoremap <leader>ff :Files<CR>$/;"	m
<leader>fg	plugin/keybindings.vim	/^nnoremap <leader>fg :GFiles<CR>$/;"	m
<leader>ot	plugin/keybindings.vim	/^nnoremap <leader>ot :terminal<CR>$/;"	m
<leader>qf	plugin/coc.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>qq	init.vim	/^nnoremap <leader>qq :q!<CR>$/;"	m
<leader>re	plugin/lang/clojure.vim	/^noremap <leader>re :Eval<CR>$/;"	m
<leader>rn	plugin/coc.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>sp	plugin/keybindings.vim	/^nnoremap <leader>sp :Rg<CR>$/;"	m
<leader>ss	init.vim	/^nnoremap <leader>ss :w<CR>$/;"	m
<leader>wh	plugin/keybindings.vim	/^nnoremap <leader>wh <C-w>H$/;"	m
<leader>wj	plugin/keybindings.vim	/^nnoremap <leader>wj <C-w>J$/;"	m
<leader>wk	plugin/keybindings.vim	/^nnoremap <leader>wk <C-w>K$/;"	m
<leader>wl	plugin/keybindings.vim	/^nnoremap <leader>wl <C-w>L$/;"	m
<leader>ws	plugin/keybindings.vim	/^nnoremap <leader>ws :split<CR>$/;"	m
<leader>wv	plugin/keybindings.vim	/^nnoremap <leader>wv :vsplit<CR>$/;"	m
<left>	init.vim	/^nnoremap <left> :vertical resize -5<CR>$/;"	m
<right>	init.vim	/^nnoremap <right> :vertical resize +5<CR>$/;"	m
<space>a	plugin/coc.vim	/^nnoremap <silent> <space>a  :<C-u>CocList diagnostics<cr>$/;"	m
<space>c	plugin/coc.vim	/^nnoremap <silent> <space>c  :<C-u>CocList commands<cr>$/;"	m
<space>e	plugin/coc.vim	/^nnoremap <silent> <space>e  :<C-u>CocList extensions<cr>$/;"	m
<space>j	plugin/coc.vim	/^nnoremap <silent> <space>j  :<C-u>CocNext<CR>$/;"	m
<space>k	plugin/coc.vim	/^nnoremap <silent> <space>k  :<C-u>CocPrev<CR>$/;"	m
<space>o	plugin/coc.vim	/^nnoremap <silent> <space>o  :<C-u>CocList outline<cr>$/;"	m
<space>p	plugin/coc.vim	/^nnoremap <silent> <space>p  :<C-u>CocListResume<CR>$/;"	m
<space>s	plugin/coc.vim	/^nnoremap <silent> <space>s  :<C-u>CocList -I symbols<cr>$/;"	m
<up>	init.vim	/^nnoremap <up> :resize +5<CR>$/;"	m
CocCurrentFunction	plugin/lighline.vim	/^function! CocCurrentFunction()$/;"	f
Diary	plugin/wiki.vim	/^command! Diary VimwikiDiaryIndex$/;"	c
Fecth config files	README.md	/^## Fecth config files$/;"	s
Files	plugin/fzf.vim	/^command! -bang -nargs=? -complete=dir Files$/;"	c
Fold	plugin/coc.vim	/^command! -nargs=? Fold :call     CocAction('fold', <f-args>)$/;"	c
Format	plugin/coc.vim	/^command! -nargs=0 Format :call CocAction('format')$/;"	c
GitBranch	plugin/lighline.vim	/^function! GitBranch()$/;"	f
Install Vim-Plug	README.md	/^## Install Vim-Plug $/;"	s
Install neovim, tmux, fzf, ripgrep	README.md	/^## Install neovim, tmux, fzf, ripgrep$/;"	s
K	plugin/coc.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
LastModified	plugin/wiki.vim	/^function! LastModified()$/;"	f
NERDTreeDirArrows	plugin/nerd.vim	/^let NERDTreeDirArrows = 1$/;"	v
NERDTreeMinimalUI	plugin/nerd.vim	/^let NERDTreeMinimalUI = 1$/;"	v
NERDTreeShowHidden	plugin/nerd.vim	/^let NERDTreeShowHidden = 1$/;"	v
NewTemplate	plugin/wiki.vim	/^function! NewTemplate()$/;"	f
OR	plugin/coc.vim	/^command! -nargs=0 OR   :call     CocAction('runCommand', 'editor.action.organizeImport')$/;"	c
RG	plugin/rg.vim	/^command! -nargs=* -bang RG call RipgrepFzf(<q-args>, <bang>0)$/;"	c
Ref	README.md	/^## Ref$/;"	s
Rg	plugin/rg.vim	/^ command! -bang -nargs=* Rg$/;"	c
RipgrepFzf	plugin/rg.vim	/^function! RipgrepFzf(query, fullscreen)$/;"	f
WG's configuration_files	README.md	/^# WG's configuration_files$/;"	c
WikiIndex	plugin/wiki.vim	/^command! WikiIndex :VimwikiIndex$/;"	c
[g	plugin/coc.vim	/^nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
]g	plugin/coc.vim	/^nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
a	github.css	/^a {$/;"	s
a	newsprint.css	/^a {$/;"	s
a:active	newsprint.css	/^a:active {$/;"	s
a:hover	newsprint.css	/^a:hover,$/;"	s
ac	plugin/coc.vim	/^omap ac <Plug>(coc-classobj-a)$/;"	m
ac	plugin/coc.vim	/^xmap ac <Plug>(coc-classobj-a)$/;"	m
af	plugin/coc.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
af	plugin/coc.vim	/^xmap af <Plug>(coc-funcobj-a)$/;"	m
blockquote	github.css	/^blockquote {$/;"	s
blockquote	github.css	/^blockquote,$/;"	s
blockquote	newsprint.css	/^blockquote {$/;"	s
blockquote	newsprint.css	/^blockquote,$/;"	s
blockquote blockquote	github.css	/^blockquote blockquote {$/;"	s
blockquote ol	newsprint.css	/^blockquote ol {$/;"	s
blockquote ul	newsprint.css	/^blockquote ul,$/;"	s
blockquote:after	newsprint.css	/^blockquote:after,$/;"	s
blockquote:before	newsprint.css	/^blockquote:before,$/;"	s
body	github.css	/^body {$/;"	s
body	newsprint.css	/^html, body {$/;"	s
coc.preferences.diagnostic.displayByAle	coc-settings.json	/^  "coc.preferences.diagnostic.displayByAle": false,$/;"	b
code	github.css	/^code {$/;"	s
code	github.css	/^code,$/;"	s
code	newsprint.css	/^code {$/;"	s
code	newsprint.css	/^code,$/;"	s
dl	github.css	/^dl,$/;"	s
footer	github.css	/^header, .context-menu, .megamenu-content, footer{$/;"	s
footer	newsprint.css	/^header, .context-menu, .megamenu-content, footer {$/;"	s
g:NERDTreeQuitOnOpen	plugin/nerd.vim	/^let g:NERDTreeQuitOnOpen = 1$/;"	v
g:NERDTreeWinSize	plugin/nerd.vim	/^let g:NERDTreeWinSize=80$/;"	v
g:ale_completion_enabled	plugin/ale.vim	/^let g:ale_completion_enabled = 0$/;"	v
g:ale_enabled	plugin/ale.vim	/^let g:ale_enabled = 0$/;"	v
g:ale_lint_on_enter	plugin/ale.vim	/^let g:ale_lint_on_enter = 1$/;"	v
g:cpp_named_requirements_highlight	plugin/lang/cpp.vim	/^let g:cpp_named_requirements_highlight = 1$/;"	v
g:cpp_simple_highlight	plugin/lang/cpp.vim	/^let g:cpp_simple_highlight = 1$/;"	v
g:fzf_action	plugin/fzf.vim	/^let g:fzf_action = {$/;"	v
g:fzf_layout	plugin/fzf.vim	/^let g:fzf_layout = {'up':'~90%', 'window': { 'width': 0.8, 'height': 0.8,'yoffset':0.5,'xoffset'/;"	v
g:fzf_tags_command	plugin/fzf.vim	/^let g:fzf_tags_command = 'ctags -R'$/;"	v
g:go_addtags_transform	plugin/lang/go.vim	/^let g:go_addtags_transform = "camelcase"$/;"	v
g:go_def_mapping_enabled	plugin/lang/go.vim	/^let g:go_def_mapping_enabled = 0$/;"	v
g:go_fmt_command	plugin/lang/go.vim	/^let g:go_fmt_command = "goimports"$/;"	v
g:go_highlight_extra_types	plugin/lang/go.vim	/^let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_fields	plugin/lang/go.vim	/^let g:go_highlight_fields = 1$/;"	v
g:go_highlight_function_arguments	plugin/lang/go.vim	/^let g:go_highlight_function_arguments = 1$/;"	v
g:go_highlight_function_calls	plugin/lang/go.vim	/^let g:go_highlight_function_calls = 1$/;"	v
g:go_highlight_functions	plugin/lang/go.vim	/^let g:go_highlight_functions = 1$/;"	v
g:go_highlight_operators	plugin/lang/go.vim	/^let g:go_highlight_operators = 1$/;"	v
g:go_highlight_types	plugin/lang/go.vim	/^let g:go_highlight_types = 1$/;"	v
g:go_highlight_variable_assignments	plugin/lang/go.vim	/^let g:go_highlight_variable_assignments = 1$/;"	v
g:indentLine_char	plugin/identLine.vim	/^let g:indentLine_char = '│'$/;"	v
g:indentLine_color_gui	plugin/identLine.vim	/^let g:indentLine_color_gui = '#3b4048'$/;"	v
g:indentLine_conceallevel	plugin/identLine.vim	/^let g:indentLine_conceallevel = 1$/;"	v
g:indentLine_enabled	plugin/identLine.vim	/^let g:indentLine_enabled = 0$/;"	v
g:indentLine_fileTypeExclude	plugin/identLine.vim	/^let g:indentLine_fileTypeExclude = ['txt', 'tex', 'json', 'swagger']$/;"	v
g:indentLine_setConceal	plugin/identLine.vim	/^let g:indentLine_setConceal = 0$/;"	v
g:lightline	plugin/lighline.vim	/^let g:lightline = {$/;"	v
g:lightline#ale#indicator_checking	plugin/lighline.vim	/^let g:lightline#ale#indicator_checking = "\\uf110 "$/;"	v
g:lightline#ale#indicator_errors	plugin/lighline.vim	/^let g:lightline#ale#indicator_errors = "\\uf05e  "$/;"	v
g:lightline#ale#indicator_ok	plugin/lighline.vim	/^let g:lightline#ale#indicator_ok = "\\uf00c  "$/;"	v
g:lightline#ale#indicator_warnings	plugin/lighline.vim	/^let g:lightline#ale#indicator_warnings = "\\uf071  "$/;"	v
g:lightline_buffer_active_buffer_left_icon	plugin/lighline.vim	/^let g:lightline_buffer_active_buffer_left_icon = ''$/;"	v
g:lightline_buffer_active_buffer_right_icon	plugin/lighline.vim	/^let g:lightline_buffer_active_buffer_right_icon = ''$/;"	v
g:lightline_buffer_ellipsis_icon	plugin/lighline.vim	/^let g:lightline_buffer_ellipsis_icon = '..'$/;"	v
g:lightline_buffer_enable_devicons	plugin/lighline.vim	/^let g:lightline_buffer_enable_devicons = 1$/;"	v
g:lightline_buffer_excludes	plugin/lighline.vim	/^let g:lightline_buffer_excludes = ['vimfiler']$/;"	v
g:lightline_buffer_expand_left_icon	plugin/lighline.vim	/^let g:lightline_buffer_expand_left_icon = '◀ '$/;"	v
g:lightline_buffer_expand_right_icon	plugin/lighline.vim	/^let g:lightline_buffer_expand_right_icon = ' ▶'$/;"	v
g:lightline_buffer_fname_mod	plugin/lighline.vim	/^let g:lightline_buffer_fname_mod = ':t'$/;"	v
g:lightline_buffer_git_icon	plugin/lighline.vim	/^let g:lightline_buffer_git_icon = ' '$/;"	v
g:lightline_buffer_maxfextlen	plugin/lighline.vim	/^let g:lightline_buffer_maxfextlen = 3$/;"	v
g:lightline_buffer_maxflen	plugin/lighline.vim	/^let g:lightline_buffer_maxflen = 50$/;"	v
g:lightline_buffer_minfextlen	plugin/lighline.vim	/^let g:lightline_buffer_minfextlen = 3$/;"	v
g:lightline_buffer_minflen	plugin/lighline.vim	/^let g:lightline_buffer_minflen = 16$/;"	v
g:lightline_buffer_modified_icon	plugin/lighline.vim	/^let g:lightline_buffer_modified_icon = '+'$/;"	v
g:lightline_buffer_readonly_icon	plugin/lighline.vim	/^let g:lightline_buffer_readonly_icon = ''$/;"	v
g:lightline_buffer_reservelen	plugin/lighline.vim	/^let g:lightline_buffer_reservelen = 20$/;"	v
g:lightline_buffer_separator_icon	plugin/lighline.vim	/^let g:lightline_buffer_separator_icon = '  '$/;"	v
g:lightline_buffer_show_bufnr	plugin/lighline.vim	/^let g:lightline_buffer_show_bufnr = 1$/;"	v
g:rainbow_active	plugin/lang/clojure.vim	/^let g:rainbow_active = 1 "set to 0 if you want to enable it later via :RainbowToggle$/;"	v
g:rainbow_conf	plugin/lang/clojure.vim	/^let g:rainbow_conf = {$/;"	v
g:simple_todo_map_keys	plugin/todo.vim	/^let g:simple_todo_map_keys = 0$/;"	v
g:simple_todo_tick_symbol	plug.vim	/^let g:simple_todo_tick_symbol = '*'$/;"	v
g:startify_lists	plugin/startify.vim	/^let g:startify_lists = [$/;"	v
g:startify_session_sort	plugin/startify.vim	/^let g:startify_session_sort = 0$/;"	v
g:tagbar_width	init.vim	/^let g:tagbar_width=40$/;"	v
g:vim_jsx_pretty_colorful_config	plugin/lang/js.vim	/^let g:vim_jsx_pretty_colorful_config = 1$/;"	v
g:vim_jsx_pretty_highlight_close_tag	plugin/lang/js.vim	/^let g:vim_jsx_pretty_highlight_close_tag = 1$/;"	v
g:vimwiki_conceallevel	plugin/wiki.vim	/^let g:vimwiki_conceallevel = 0$/;"	v
g:vimwiki_global_ext	plugin/wiki.vim	/^let g:vimwiki_global_ext = 0$/;"	v
g:vimwiki_list	plugin/wiki.vim	/^let g:vimwiki_list = [$/;"	v
g:workspace_autosave	plugin/vim-workspace.vim	/^let g:workspace_autosave = 0$/;"	v
g:workspace_autosave_untrailspaces	plugin/vim-workspace.vim	/^let g:workspace_autosave_untrailspaces = 0$/;"	v
g:workspace_persist_undo_history	plugin/vim-workspace.vim	/^let g:workspace_persist_undo_history = 0$/;"	v
gd	plugin/coc.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
get	tmux/plugins/tmux-onedark-theme/tmux-onedark-theme.tmux	/^get() {$/;"	f
gi	plugin/coc.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gr	plugin/coc.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gy	plugin/coc.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
h1	github.css	/^h1 {$/;"	s
h1	github.css	/^h1,$/;"	s
h1	newsprint.css	/^h1 {$/;"	s
h1	newsprint.css	/^h1,$/;"	s
h1 code	github.css	/^h1 code {$/;"	s
h1 tt	github.css	/^h1 tt,$/;"	s
h1:hover a.anchor	github.css	/^h1:hover a.anchor,$/;"	c
h2	github.css	/^h2 {$/;"	s
h2	github.css	/^h2,$/;"	s
h2	newsprint.css	/^h2,$/;"	s
h2 code	github.css	/^h2 code {$/;"	s
h2 tt	github.css	/^h2 tt,$/;"	s
h2:hover a.anchor	github.css	/^h2:hover a.anchor,$/;"	c
h3	github.css	/^h3 {$/;"	s
h3	github.css	/^h3,$/;"	s
h3	newsprint.css	/^h3 {$/;"	s
h3	newsprint.css	/^h3,$/;"	s
h3 + ol	newsprint.css	/^h3 + ol,$/;"	s
h3 + ul	newsprint.css	/^h3 + ul,$/;"	s
h3 code	github.css	/^h3 code {$/;"	s
h3 tt	github.css	/^h3 tt,$/;"	s
h3:hover a.anchor	github.css	/^h3:hover a.anchor,$/;"	c
h4	github.css	/^h4 {$/;"	s
h4	github.css	/^h4,$/;"	s
h4	newsprint.css	/^h4 {$/;"	s
h4	newsprint.css	/^h4,$/;"	s
h4 + ol	newsprint.css	/^h4 + ol,$/;"	s
h4 + ul	newsprint.css	/^h4 + ul,$/;"	s
h4 code	github.css	/^h4 code {$/;"	s
h4 tt	github.css	/^h4 tt,$/;"	s
h4:hover a.anchor	github.css	/^h4:hover a.anchor,$/;"	c
h5	github.css	/^h5 {$/;"	s
h5	github.css	/^h5,$/;"	s
h5	newsprint.css	/^h5,$/;"	s
h5 + ol	newsprint.css	/^h5 + ol,$/;"	s
h5 + ul	newsprint.css	/^h5 + ul,$/;"	s
h5 code	github.css	/^h5 code {$/;"	s
h5 tt	github.css	/^h5 tt,$/;"	s
h5:hover a.anchor	github.css	/^h5:hover a.anchor,$/;"	c
h6	github.css	/^h6 {$/;"	s
h6	newsprint.css	/^h6 {$/;"	s
h6 + ol	newsprint.css	/^h6 + ol {$/;"	s
h6 + ul	newsprint.css	/^h6 + ul,$/;"	s
h6 code	github.css	/^h6 code {$/;"	s
h6 tt	github.css	/^h6 tt,$/;"	s
h6:hover a.anchor	github.css	/^h6:hover a.anchor {$/;"	c
header	github.css	/^header, .context-menu, .megamenu-content, footer{$/;"	s
header	newsprint.css	/^header, .context-menu, .megamenu-content, footer {$/;"	s
hr	github.css	/^hr {$/;"	s
hr	newsprint.css	/^hr {$/;"	s
html	github.css	/^    html {$/;"	s
html	github.css	/^html {$/;"	s
html	newsprint.css	/^html {$/;"	s
html	newsprint.css	/^html, body {$/;"	s
ic	plugin/coc.vim	/^omap ic <Plug>(coc-classobj-i)$/;"	m
ic	plugin/coc.vim	/^xmap ic <Plug>(coc-classobj-i)$/;"	m
if	plugin/coc.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
if	plugin/coc.vim	/^xmap if <Plug>(coc-funcobj-i)$/;"	m
input	newsprint.css	/^input {$/;"	s
li > ol	newsprint.css	/^li > ol {$/;"	s
li > ul	newsprint.css	/^li > ul,$/;"	s
li li ol>li	newsprint.css	/^li li ol>li{$/;"	s
li ol>li	newsprint.css	/^li ol>li {$/;"	s
li p.first	github.css	/^li p.first {$/;"	c
li>ol	github.css	/^li>ol,$/;"	s
li>ul	github.css	/^li>ul {$/;"	s
mapleader	plugin/rg.vim	/^let mapleader = "\\<SPACE>"$/;"	v
maplocalleader	plugin/todo.vim	/^let maplocalleader = "\\\\"$/;"	v
maplocalleader	plugin/wiki.vim	/^let maplocalleader = "\\\\"$/;"	v
mygroup	plugin/coc.vim	/^augroup mygroup$/;"	a
ol	github.css	/^ol {$/;"	s
ol	github.css	/^ol,$/;"	s
ol	newsprint.css	/^ol {$/;"	s
ol	newsprint.css	/^ol,$/;"	s
ol li	newsprint.css	/^ol li {$/;"	s
ol:first-child	github.css	/^ol:first-child {$/;"	s
ol:last-child	github.css	/^ol:last-child {$/;"	s
p	github.css	/^p,$/;"	s
p	newsprint.css	/^p,$/;"	s
p + ol	newsprint.css	/^p + ol{$/;"	s
p + ul	newsprint.css	/^p + ul,$/;"	s
pre	github.css	/^    pre {$/;"	s
pre	newsprint.css	/^pre {$/;"	s
pre	newsprint.css	/^pre,$/;"	s
q	init.vim	/^nnoremap q :q<CR>$/;"	m
q	newsprint.css	/^q {$/;"	s
q:after	newsprint.css	/^q:after {$/;"	s
q:before	newsprint.css	/^q:before,$/;"	s
s:check_back_space	plugin/coc.vim	/^function! s:check_back_space() abort$/;"	f
s:show_documentation	plugin/coc.vim	/^function! s:show_documentation()$/;"	f
set	tmux/plugins/tmux-onedark-theme/tmux-onedark-theme.tmux	/^set() {$/;"	f
setw	tmux/plugins/tmux-onedark-theme/tmux-onedark-theme.tmux	/^setw() {$/;"	f
t	init.vim	/^map t :bp <BAR> bd #<CR>$/;"	m
table	github.css	/^    table,$/;"	s
table	github.css	/^table {$/;"	s
table	github.css	/^table{$/;"	s
table	newsprint.css	/^table {$/;"	s
table td	github.css	/^table td {$/;"	s
table td:first-child	github.css	/^table td:first-child {$/;"	s
table td:last-child	github.css	/^table td:last-child {$/;"	s
table th	github.css	/^table th {$/;"	s
table th:first-child	github.css	/^table th:first-child,$/;"	s
table th:last-child	github.css	/^table th:last-child,$/;"	s
table tr	github.css	/^table tr {$/;"	s
table tr:nth-child(2n)	github.css	/^table tr:nth-child(2n),$/;"	s
td	newsprint.css	/^td {$/;"	s
tfoot th	newsprint.css	/^tfoot th {$/;"	s
th	newsprint.css	/^th {$/;"	s
thead	github.css	/^thead {$/;"	s
thead	newsprint.css	/^thead {$/;"	s
thead th	newsprint.css	/^thead th,$/;"	s
tr:nth-child(even)	newsprint.css	/^tr:nth-child(even) {$/;"	s
trouble shooting	README.md	/^## trouble shooting$/;"	s
tt	github.css	/^tt {$/;"	s
tt	newsprint.css	/^tt {$/;"	s
ul	github.css	/^ul,$/;"	s
ul	newsprint.css	/^ul {$/;"	s
ul	newsprint.css	/^ul,$/;"	s
ul li	newsprint.css	/^ul li {$/;"	s
ul:first-child	github.css	/^ul:first-child,$/;"	s
ul:last-child	github.css	/^ul:last-child,$/;"	s
vimwikiauto	plugin/wiki.vim	/^augroup vimwikiauto$/;"	a
vimwikigroup	plugin/wiki.vim	/^augroup vimwikigroup$/;"	a
